---
title: "Introduction and computer setup"
subtitle: "IST 356 - M003, Syracuse University, Fall 2025"
toc: true
order: 1
---

# Setting up Your Computer and Yourself!

In IST356 we teach you programming for data analytics using the tools and techiques used by those in the industry. As such, you will learn how to setup and configure development environments, use git and github and learn to systematically test your code.

This is unlike IST256 where the emphasis is on the programming basics and the motivations behind learning computational thinking.


|| IST356 | IST256|
|-----|-----|-----|
Programming Environment | Install vscode + git + python on your computer | Web-hosted jupyterhub |
Assignment Submissions | Student learn and use git / github | Built-in assignment submission
Coursework, slides, examples | You clone / diff the prof repo | Autodiff and merge at login

In this course you'll do it the real way, nothing is hidden / abstracted away for you.

## Step 1: Software Installs

Here's what you'll need to install on your computer. Please read this entire section prior to installing. :-)

1. **Visual Studio Code**: https://code.visualstudio.com/Download   
This is a free editor with testing and debugging capabilities. As you install you can accept all defaults, except the last one: DO NOT launch the application when complete! If you do, simply close it. 

2. **Git Source Code Manager**: https://git-scm.com/download/  
As you set it up, you will be asked several questions, for which the default selection is fine. EXCEPTION: choose Visual Studio Code as the default editor. 

3. [Miniconda](https://www.anaconda.com/docs/getting-started/miniconda/install#quickstart-install-instructions) 
**Do not install this yet!** You will install this using the terminal in VSCode after VSCode and Git are installed and setup; see instructions below.

## Setup 2: Github Account

::: {.callout-noe}
For distributing assignments we will use GitHub Classroom. This means you need a GitHub account setup; you will need to send me your GitHub username once you do.
:::

Being an SU student comes with some perks. One of them is a Github for Education account and accompanying "packpack" of goodies. To use this benefit, your github account must be associated with your **@syr.edu** email.

### IF YOU HAVE A GITHUB ACCOUNT:

Associate your current account with SU, by adding your email:

1. Go to to https://github.com  and click Sign In 
2. Once you have logged in, go to: https://github.com/settings/emails  
3. Add and verify your SU email address.

### IF YOU DO NOT HAVE A GITHUB ACCOUNT:

You'll need to create an account:

1. Go to to https://github.com  and click Sign In 
2. Follow the on-screen instructions to sign up for an account.
3. Make sure to use your **@syr.edu** email for the account.
4. Add your personal email when you're at it so you don't lose Github access after you graduate!

::: {.callout-important}
Once you have a GitHub account, please email your GitHub username to me at cdcapano@syr.edu.
:::

### Backpack Access

1. Go to the Github Backpack site:  https://education.github.com/pack  
and click **Sign Up For Student Developer Pack**
2. Once your account is verified, you will have backpack access.
3. You'll know its active when you check your billing plan: https://github.com/settings/billing/summary   
you should see a credit here.
4. Once you have backpack access, you can enable Github Copilot AI. https://github.com/settings/copilot 


## Step 3: Configure VS Code

The last step is to configure VS Code for Python debugging. Provided everything else is in order, this should be straightforward.

1.  Open Visual studio code. You will be asked to configure it.
    1.  Set up GitHub Copilot. To do so, you'll need to sign into GitHub by clicking "Continue with GitHub". After you do, you may be dropped into a "Welcome" tab in VS Code. If so, click the "Walkthrough: Setup VS Code" tab to continue set up.
    1.  Pick a theme: Light, Dark, etc...
    1. Add the following Extensions: Python, Jupyter.
    1. **Windows users only**: we'll occasionally be using `bash` in the terminal mode of VSCode. Mac and Linux users have `bash` natively installed in the operating system. Windows users will have gotten a copy of bash when they downloaded and installed Git SCM. However, you need to tell VSCode to use `bash` in the Terminal rather than Windows PowerShell. To do that:
        a.  Click "Unlock productivity with the Command Palette" in the Walthrough tab, then "Open Command Palette". Alternatively, if you don't see that option, open the Command Palette by typing CTRL + SHIFT + P. (Mac users type COMMAND + SHIFT + P).
        b.  Type "Select Default Profile" then hit ENTER.
        c.  Select "Git Bash" from the drop-down options.
        d.  Check that it worked by opening a new terminal: in the file menu, click "Terminal" -> "New Terminal". You should see "bash" in the upper right of the terminal screen.

    1.  Close the welcome Tab but keep VS Code open.

## Step 4: Install Miniconda

1.  Open a terminal by clicking "Terminal" -> "New Terminal".
1.  In your browser go to the [Miniconda quick install instructions](https://www.anaconda.com/docs/getting-started/miniconda/install#quickstart-install-instructions)
1.  Click the tab corresponding to your operating system. **Windows users**: select the "Linux" tab, **not the Windows** ones. This is because you're using a `bash` emulator for your terminal, not PowerShell or Command Prompt.
1.  Copy the commands listed by clicking the copy button in the upper right (it looks like to squares on top of each other).
1.  Go back to VS Code. In the terminal window paste the commands you copied by typing CTRL + V (Windows users) or COMMAND + V (Mac users).
1.  Follow the onscreen instructions, hitting enter for the default every time.

## Step 5: Create a conda environment and test it in VS Code

1.  In VS Code open a new terminal window (do this even if you have a terminal window open previously) by clicking Terminal -> New Terminal. If `conda` installed successfully in the previous step, you should see `(base)` the left of your prompt.
1.  Type:

    ```bash
    conda create -n ist356 -c conda-forge -y python=3.11 ipykernel
    ```

1.  After it has finished installing, open the Command Palette by typing CTRL + SHIFT + P. (Mac users: type COMMAND + SHIFT + P.) 

1.  Type "Python: Select Interpreter" then hit ENTER.
1.  Type "ist356" then hit ENTER.
1.  Check to ensure your environment works:
    1.  Click File -> "New File..."
    1.  In the drop down menu, select "Jupyter Notebook".
    1.  Click "Select Kernel" on the right then type "ist356".
    1.  In the first cell, type:

        ```python
        print("hello world!")
        ```

    1.  Hit the run button on the left or type SHIFT + ENTER to execute the code. You should get back "hello world!".
    1.  Close the ipynb file (you may optionally save it; if you do, be sure to call it something other then "Untitled.ipynb", maybe "hello.ipynb" instead).
